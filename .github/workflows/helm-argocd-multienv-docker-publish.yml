name: Multi-Env Helms and ArgoCD Image Publish

on:
  push:
    branches:
      - dev
      - staging
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: eslintpurity/weather-app

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract tag (short SHA + env)
        id: vars
        run: |
          BRANCH="${GITHUB_REF##*/}"
          case "$BRANCH" in
            main) ENV=prod ;;
            staging) ENV=staging ;;
            dev) ENV=dev ;;
            *) echo "Unsupported branch"; exit 1 ;;
          esac
          TAG=${GITHUB_SHA::7}-helms-${ENV}
          echo "tag=${{ env.IMAGE_NAME }}:$TAG" >> $GITHUB_OUTPUT
          echo "short_tag=$TAG" >> $GITHUB_OUTPUT
          echo "env_dir=$ENV" >> $GITHUB_OUTPUT

      - name: Build & Push Docker Image
        run: |
          docker build -t ${{ steps.vars.outputs.tag }} .
          docker push ${{ steps.vars.outputs.tag }}


      - name: Update Helm values.yaml with new image tag
        run: |
          sed -i "s|^  tag: .*|  tag: \"${{ steps.vars.outputs.short_tag }}\"|" weather-app-helms/environments/${{ steps.vars.outputs.env_dir }}/values.yaml

      - name: Commit and Push Updated values.yaml
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          git config user.name "$GIT_USER_NAME"
          git config user.email "$GIT_USER_EMAIL"
          git add weather-app-helms/environments/${{ steps.vars.outputs.env_dir }}/values.yaml
          git commit -m "ci(${GITHUB_REF##*/}): update image tag to ${{ steps.vars.outputs.short_tag }}"
          git push https://${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref_name }}