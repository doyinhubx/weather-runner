name: Simulate Kubernetes Deployment with Rollback

on:
  push:
    branches: [main]

jobs:
  deploy-simulate:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Install Docker (already on GitHub runners) and kind
      - name: Install kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.25.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind version

      # 3. Create a temporary Kubernetes cluster
      - name: Create kind cluster
        run: |
          kind create cluster --name ci-cluster
          kubectl cluster-info

      # 4. Build Docker image for the app (simulate failure with bad tag)
      - name: Build broken Docker image
        run: |
          docker build -t weather-app:broken .

      # 5. Load image into kind cluster
      - name: Load image into kind
        run: kind load docker-image weather-app:broken --name ci-cluster

      # 6. Deploy with Helm (broken image)
      - name: Deploy broken version
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm upgrade --install weather-app ./weather-app-helms \
            --namespace default \
            --create-namespace \
            --set image.tag=broken \
            --wait --timeout 1m || true  # Allow failure

      # 7. Check pod health and rollback if failed
      - name: Health check & rollback
        run: |
          STATUS=$(kubectl get pods -l app=weather-app -o jsonpath="{.items[0].status.phase}")
          if [ "$STATUS" != "Running" ]; then
            echo "Deployment failed! Rolling back..."
            kubectl rollout undo deployment/weather-app
          else
            echo "Deployment succeeded!"
          fi

      # 8. Delete kind cluster (cleanup)
      - name: Cleanup
        run: kind delete cluster --name ci-cluster
